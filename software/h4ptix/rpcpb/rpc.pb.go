//go:generate protoc --go_out=. --go_opt=paths=source_relative --proto_path=../../../proto rpc.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: rpc.proto

package rpcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	ErrCode_ErrCodeNone           ErrCode = 0
	ErrCode_ErrCodeInvalidCommand ErrCode = 1
	ErrCode_ErrCodeNotSupported   ErrCode = 2
	ErrCode_ErrCodeInternal       ErrCode = 3
	ErrCode_ErrCodeInvalidReq     ErrCode = 4
	ErrCode_ErrCodePortInvalid    ErrCode = 5
	ErrCode_ErrCodePortBusy       ErrCode = 6
	ErrCode_ErrCodeNoDev          ErrCode = 1337
	ErrCode_ErrCodeDevBusy        ErrCode = 1338
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:    "ErrCodeNone",
		1:    "ErrCodeInvalidCommand",
		2:    "ErrCodeNotSupported",
		3:    "ErrCodeInternal",
		4:    "ErrCodeInvalidReq",
		5:    "ErrCodePortInvalid",
		6:    "ErrCodePortBusy",
		1337: "ErrCodeNoDev",
		1338: "ErrCodeDevBusy",
	}
	ErrCode_value = map[string]int32{
		"ErrCodeNone":           0,
		"ErrCodeInvalidCommand": 1,
		"ErrCodeNotSupported":   2,
		"ErrCodeInternal":       3,
		"ErrCodeInvalidReq":     4,
		"ErrCodePortInvalid":    5,
		"ErrCodePortBusy":       6,
		"ErrCodeNoDev":          1337,
		"ErrCodeDevBusy":        1338,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_rpc_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

type Trigger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	DelayMs       uint32                 `protobuf:"varint,2,opt,name=delay_ms,json=delayMs,proto3" json:"delay_ms,omitempty"`
	DurationMs    uint32                 `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	mi := &file_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *Trigger) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Trigger) GetDelayMs() uint32 {
	if x != nil {
		return x.DelayMs
	}
	return 0
}

func (x *Trigger) GetDurationMs() uint32 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

type Err struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ErrCode                `protobuf:"varint,1,opt,name=code,proto3,enum=rpcpb.ErrCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Err) Reset() {
	*x = Err{}
	mi := &file_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Err) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Err) ProtoMessage() {}

func (x *Err) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Err.ProtoReflect.Descriptor instead.
func (*Err) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Err) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_ErrCodeNone
}

type Req struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Req_Trigger
	Payload       isReq_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *Req) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Req) GetPayload() isReq_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Req) GetTrigger() *Trigger {
	if x != nil {
		if x, ok := x.Payload.(*Req_Trigger); ok {
			return x.Trigger
		}
	}
	return nil
}

type isReq_Payload interface {
	isReq_Payload()
}

type Req_Trigger struct {
	Trigger *Trigger `protobuf:"bytes,10,opt,name=trigger,proto3,oneof"`
}

func (*Req_Trigger) isReq_Payload() {}

type Rsp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Rsp_Ack
	//	*Rsp_Err
	Payload       isRsp_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rsp) Reset() {
	*x = Rsp{}
	mi := &file_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rsp) ProtoMessage() {}

func (x *Rsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rsp.ProtoReflect.Descriptor instead.
func (*Rsp) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *Rsp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rsp) GetPayload() isRsp_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Rsp) GetAck() *Ack {
	if x != nil {
		if x, ok := x.Payload.(*Rsp_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *Rsp) GetErr() *Err {
	if x != nil {
		if x, ok := x.Payload.(*Rsp_Err); ok {
			return x.Err
		}
	}
	return nil
}

type isRsp_Payload interface {
	isRsp_Payload()
}

type Rsp_Ack struct {
	Ack *Ack `protobuf:"bytes,10,opt,name=ack,proto3,oneof"`
}

type Rsp_Err struct {
	Err *Err `protobuf:"bytes,11,opt,name=err,proto3,oneof"`
}

func (*Rsp_Ack) isRsp_Payload() {}

func (*Rsp_Err) isRsp_Payload() {}

var File_rpc_proto protoreflect.FileDescriptor

const file_rpc_proto_rawDesc = "" +
	"\n" +
	"\trpc.proto\x12\x05rpcpb\"Y\n" +
	"\aTrigger\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\x12\x19\n" +
	"\bdelay_ms\x18\x02 \x01(\rR\adelayMs\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\rR\n" +
	"durationMs\"\x05\n" +
	"\x03Ack\")\n" +
	"\x03Err\x12\"\n" +
	"\x04code\x18\x01 \x01(\x0e2\x0e.rpcpb.ErrCodeR\x04code\"L\n" +
	"\x03Req\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12*\n" +
	"\atrigger\x18\n" +
	" \x01(\v2\x0e.rpcpb.TriggerH\x00R\atriggerB\t\n" +
	"\apayload\"`\n" +
	"\x03Rsp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1e\n" +
	"\x03ack\x18\n" +
	" \x01(\v2\n" +
	".rpcpb.AckH\x00R\x03ack\x12\x1e\n" +
	"\x03err\x18\v \x01(\v2\n" +
	".rpcpb.ErrH\x00R\x03errB\t\n" +
	"\apayload*\xcf\x01\n" +
	"\aErrCode\x12\x0f\n" +
	"\vErrCodeNone\x10\x00\x12\x19\n" +
	"\x15ErrCodeInvalidCommand\x10\x01\x12\x17\n" +
	"\x13ErrCodeNotSupported\x10\x02\x12\x13\n" +
	"\x0fErrCodeInternal\x10\x03\x12\x15\n" +
	"\x11ErrCodeInvalidReq\x10\x04\x12\x16\n" +
	"\x12ErrCodePortInvalid\x10\x05\x12\x13\n" +
	"\x0fErrCodePortBusy\x10\x06\x12\x11\n" +
	"\fErrCodeNoDev\x10\xb9\n" +
	"\x12\x13\n" +
	"\x0eErrCodeDevBusy\x10\xba\n" +
	"B1Z/github.com/buglloc/h4ptix/software/h4ptix/rpcpbb\x06proto3"

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData []byte
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)))
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rpc_proto_goTypes = []any{
	(ErrCode)(0),    // 0: rpcpb.ErrCode
	(*Trigger)(nil), // 1: rpcpb.Trigger
	(*Ack)(nil),     // 2: rpcpb.Ack
	(*Err)(nil),     // 3: rpcpb.Err
	(*Req)(nil),     // 4: rpcpb.Req
	(*Rsp)(nil),     // 5: rpcpb.Rsp
}
var file_rpc_proto_depIdxs = []int32{
	0, // 0: rpcpb.Err.code:type_name -> rpcpb.ErrCode
	1, // 1: rpcpb.Req.trigger:type_name -> rpcpb.Trigger
	2, // 2: rpcpb.Rsp.ack:type_name -> rpcpb.Ack
	3, // 3: rpcpb.Rsp.err:type_name -> rpcpb.Err
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	file_rpc_proto_msgTypes[3].OneofWrappers = []any{
		(*Req_Trigger)(nil),
	}
	file_rpc_proto_msgTypes[4].OneofWrappers = []any{
		(*Rsp_Ack)(nil),
		(*Rsp_Err)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		EnumInfos:         file_rpc_proto_enumTypes,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
